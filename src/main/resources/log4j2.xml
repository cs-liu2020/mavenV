<?xml version="1.0" encoding="UTF-8"?>
<!--
    8个优先级从高到低依次为：OFF、FATAL、ERROR、WARN、INFO、INFO、TRACE、 ALL。
    如果设置优先级为WARN，那么OFF、FATAL、ERROR、WARN 4个级别的log能正常输出
    设置为OFF 表示不记录log4j2本身的日志，
 -->
<Configuration status="WARN" monitorInterval="30">
    <Properties>
        <!--<Property name="LOG_PATTERN">%d{HH:mm:ss.SSS} [%logid] [%t] %-5level %logger{36} - %m%n</Property>-->
        <!--<Property name="LOG_PATTERN">[LOGID:%X{logId}] %d{yyyy/MM/dd HH:mm:ss} [%p] %c{1} (%F:%L) %msg%n</Property>-->
<!--         <Property name="LOG_PATTERN">%d{HH:mm:ss.SSS} [%X{MDC_REQUEST_ID}] [%t] %-5level %logger{36} - %m%n</Property> -->

		<Property name="LOG_PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level - traceId:[%X{traceId}] %c{36} -- %m%n</Property>
        <Property name="APP_LOG_ROOT">/data/logs</Property>
<!--        <Property name="APP_LOG_NAME">${sys:log4.fileName}</Property>-->
        <Property name="APP_LOG_NAME">mavenV</Property>
    </Properties>
    <!--先定义所有的appender-->
    <Appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT" follow="true">
            <!--输出日志的格式-->
            <PatternLayout pattern="${LOG_PATTERN}" charset="UTF-8"/>
            <!--            <RegexFilter regex=".* test .*" onMatch="ACCEPT" onMismatch="DENY"/>-->

            <!--只输出ERROR级别-->
            <!--            <Filters>-->
            <!--                <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <!--            </Filters>-->
        </Console>
        <!-- 这个会打印出所有的Info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <!--        <RollingRandomAccessFile name="RollingFileInfo"-->
        <!--                     fileName="${APP_LOG_ROOT}/application-info.log"-->
        <!--                     filePattern="${APP_LOG_ROOT}/$${date:yyyy-MM}/application-%d{yyyy-MM-dd}-%i.log">-->
        <!--            &lt;!&ndash;控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）&ndash;&gt;-->
        <!--            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>-->
        <!--            <PatternLayout pattern="${LOG_PATTERN}" />-->
        <!--            <Policies>-->
        <!--                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>-->
        <!--                <SizeBasedTriggeringPolicy size="1KB" />-->
        <!--            </Policies>-->
        <!--            <DefaultRolloverStrategy max="15" />-->
        <!--        </RollingRandomAccessFile>-->

        <RollingRandomAccessFile name="RollingFileInfo"
                                 immediateFlush="true"
                                 fileName="${APP_LOG_ROOT}/${APP_LOG_NAME}-info.log"
                                 filePattern="${APP_LOG_ROOT}/${date:yyyy-MM}/${APP_LOG_NAME}-%d{yyyy-MM-dd}-%i.zip">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <Filters>
                <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>

            <!--<PatternLayout pattern="${LOG_PATTERN}" charset="UTF-8"/>-->
            <JsonPatternLayout projectName="mavenV" pattern="${LOG_PATTERN}" charset="UTF-8"/>
            <Policies>
                <!--                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>-->
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="5102MB" />
            </Policies>
            <DefaultRolloverStrategy max="20" />
        </RollingRandomAccessFile>


        <!-- 这个会打印出所有的Error及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingRandomAccessFile name="RollingFileError"
                                 fileName="${APP_LOG_ROOT}/${APP_LOG_NAME}-error.log"
                                 filePattern="${APP_LOG_ROOT}/$${date:yyyy-MM}/${APP_LOG_NAME}-%d{yyyy-MM-dd}-%i.log">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"  charset="UTF-8"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="1024MB" />
            </Policies>
            <DefaultRolloverStrategy max="10" />
        </RollingRandomAccessFile>
        <RollingRandomAccessFile name="RollingFilePerf"
                                 fileName="${APP_LOG_ROOT}/${APP_LOG_NAME}-perf.log"
                                 filePattern="${APP_LOG_ROOT}/$${date:yyyy-MM}/${APP_LOG_NAME}-%d{yyyy-MM-dd}-%i.log">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}" />
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="1024MB" />
            </Policies>
            <DefaultRolloverStrategy max="20" />
        </RollingRandomAccessFile>
    </Appenders>

    <Loggers>
        <Root level="INFO" includeLocation="true">
            <AppenderRef ref="Console" />
        </Root>
        <Logger name="org.springframework" additivity="false">
            <AppenderRef ref="RollingFileInfo" />
            <AppenderRef ref="RollingFileError" />
            <AppenderRef ref="Console" />
        </Logger>
        <Logger name="org.mybatis" additivity="false">
            <AppenderRef ref="RollingFileInfo" />
            <AppenderRef ref="RollingFileError" />
            <AppenderRef ref="Console" />
        </Logger>
        <Logger name="org.example" additivity="false" includeLocation="true">
            <AppenderRef ref="RollingFileInfo" />
            <AppenderRef ref="RollingFileError" />
            <AppenderRef ref="Console" />
        </Logger>


<!--         <logger name="com.opay.payment.channel.provider.server.aop" additivity="false"> -->
<!--             <AppenderRef ref="RollingFilePerf" /> -->
<!--         </logger> -->
    </Loggers>
</Configuration>